#!/bin/bash

##
      
#Help function
function HELP {
  echo "Command line switches are optional. The following switches are recognized."
  echo "$blue-s$nc -- Sorting options, use$blue favorites | random | date_added | views | toplist | revelance$nc"
  echo "$blue-r$nc -- Range options, use$blue 1d | 3d | 1w | 1M | 3M | 6M | 1y$nc"
  echo "$blue-c$nc -- Range options$blue-c$nc$blue | General →  g, general | General and Anime →  ga | General and People →  gp | all →  all | Anime and People →  ap | Anime →  a, anime | People →  p, people$nc"    
  echo "$blue-t$nc -- Time options, use$blue 10 | 10m | 10h$nc"
  echo "$blue-p$nc -- Purity options, use$blue 100 - SWF | 011 - Scetchy | 001 -NSFW | 110 - SFW + Scetchy | 101 - Scetchy + NSFW | 111 - ALL (For NSFW need login, change lines in Needed for NSFW block)"
 # echo "$blue-f$nc -- Search options"
  echo "$blue-u$nc -- Pick user"
  echo "$blue-z$nc -- Set page range to sh"
  echo "examle$blue ./wallrandom.sh -c a -s toplist  -u Hellcome -z 3 -30m$nc"
  echo  
  exit 1
}
##

#####################################
###   Needed for NSFW   ###
#####################################
# Enter your Username
USER=""
# Enter your password
# if your password contains ' you need to escape it
# replace all ' with '"'"'
PASS=""
#####################################
### End needed for NSFW/Favorites ###
#####################################

function login {


   wget -q --referer=https://alpha.wallhaven.cc \
        https://alpha.wallhaven.cc/auth/login
    token="$(grep 'name="_token"' login | sed 's:.*value=::' \
        | sed 's/.\{2\}$//')"
   
    encoded_pass=$(echo -n "$PASS" | od -An -tx1 | tr ' ' % | xargs printf "%s" )
     wget -q --load-cookies=cookies.txt --keep-session-cookies --save-cookies=cookies.txt --referer=https://alpha.wallhaven.cc/auth/login \
        --post-data="_token=$token&username=$USER&password=$encoded_pass" \
        https://alpha.wallhaven.cc/auth/login
} # /login


dir=$HOME/bin #your scripts dir
picURL=https://alpha.wallhaven.cc/wallpapers/full
siteURL=https://alpha.wallhaven.cc
red="$(tput setaf 1)"
green="$(tput setaf 14)"
blue="$(tput setaf 4)"
nc="$(tput sgr0)"
search=""
page=5
random=$(shuf -i 1-$page -n1)



##Wallhaven setings
sorting=favorites #Relevance / Random / Date Added / Views / Favorites / Toplist
purity=100 
categories=010 # 100 - General / 110 - General + Anime / 101 - General + People / 111 - ALL / 011 - Anime + People / 010 - Anime / 001 - People /
attleast= # your resolution
topRange=1w # sort by date 1d / 3d / 1w / 1M / 3M / 6M / 12M / 1y
search=''
userr=$OPTARG


## Flags
## Functions 

                                                                              function cat {

categories=$OPTARG

if [ $categories != general ] && [ $categories != g ] && [ $categories != ga ] && [ $categories != gp ] && [ $categories != all ] && [ $categories != ap ] && [ $categories != pepople ] && [ $categories != p ] && [ $categories != anime ] && [ $categories != a ] ; then
        echo -e $red'\n'invalid parameter $categories$nc$blue'\n'•General →  g, general "\n"•General and Anime →  ga "\n"•General and People →  gp '\n'•all →  all '\n'•Anime and People →  ap '\n'•Anime →  a, anime '\n'•People →  p, people$nc'\n' ; exit 0 
        fi 
        if [ $categories == anime ] ; then 
        categories=010 ; echo categories set to$blue Anime$nc
        fi
        if [ $categories == a ] ; then 
        categories=010 ; echo categories set to$blue Anime$nc
        fi
        if [ $categories == general ] ; then 
        categories=100 ; echo categories set to$blue General$nc
        fi
        if [ $categories == g ] ; then 
        categories=100 ; echo categories set to$blue General$nc
        fi ;
        if [ $categories == ga ] ; then 
        categories=110 ; echo categories set to$blue General$nc and$blue Anime$nc
        fi
        if [ $categories == gp ] ; then 
        categories=101 ; echo categories set to$blue General$nc and$blue People$nc
        fi
        if [ $categories == all ] ; then 
        categories=111 ; echo categories set to$blue All$nc
        fi
        if [ $categories == ap ] ; then 
        categories=011 ; echo categories set to$blue Anime$nc and$blue People$nc
        fi
        if [ $categories == people ] ; then 
        categories=001 ; echo categories set to$blue People$nc
        fi
        if [ $categories == p ] ; then 
        categories=001 ; echo categories set to$blue People$nc
        fi

} #categories

                                                                             function range {

topRange=$OPTARG
       if [ $topRange != 1d ] && [ $topRange != 3d ] && [ $topRange != 1w ] && [ $topRange != 1M ] && [ $topRange != 3M ] && [ $topRange != 6M ] && [ $topRange != 1y ] ; then
        echo "$red invalid parameter ($topRange)$nc use$blue 1d | 3d | 1w | 1M | 3M | 6M | 1y$nc" ; exit 0 
        else 
        echo "topRange set to $blue$topRange$nc" 
        fi 
} #Toprange

                                                                             function sorti {


sorting=$OPTARG
        if [ $sorting != favorites ] && [ $sorting != toplist ] && [ $sorting != random ] && [ $sorting != date_added ] && [ $sorting != views ] && [ $sorting != relevance ] ; then
        echo "$red invalid parameter ($sorting)$nc use$blue favorites | random | date_added | views | toplist | revelance$nc" ; exit 0 
        else 
        echo "sorting set to $blue$sorting$nc"
        fi
} #sorting

                                                                             function pur {

purity=$OPTARG
        if [ $purity != 001 ] && [ $purity != 100 ] && [ $purity != 010 ] && [ $purity != 111 ] && [ $purity != 011 ] && [ $purity != 101 ]  ; then
        echo "$red invalid parameter ($purity)$nc use$blue 100 - SWF | 011 - Scetchy | 001 -NSFW | 110 - SFW + Scetchy | 101 - Scetchy + NSFW | 111 - ALL (For NSFW need login, change lines in Needed for NSFW block)$nc" ; exit 0 
        else 
        echo "purity set to $blue$purity$nc"
        cd /tmp/
        login "$USER" "$PASS"

      if [ -f /tmp/cookies.txt ] ; then

        echo "$(tput setaf 4)succes login $USER$nc"
        else
        echo "$(tput setaf 4)pls check you login and password $USER$nc"
       fi
        fi 


} #purity

                                                                             function loop {

time=$OPTARG
echo "auto change set to $blue$time$nc" 
} #time


                                                                      


                                                                             function user {

userr=$OPTARG
echo "$blue$userr$nc wallpapers" 
} #user

                                                                             function srch {

search=$OPTARG
echo "search $blue$search$nc"
} #search

                                                                             function page {
page=$OPTARG
} #page

                                                                             function load {  

if [ "$purity" == "001" ]
then
wall=$(cd /tmp/ && curl -s --cookie cookies.txt "$html" | grep -Po '(?<=src="//wallpapers.wallhaven.cc/wallpapers/full/)[^"]*(jpg|png|gif|bmp|jpeg)')
else 
wall=$(curl -s "$html" | grep -Po '(?<=src="//wallpapers.wallhaven.cc/wallpapers/full/)[^"]*(jpg|png|gif|bmp|jpeg)')
fi
cd $dir
wget -q "$picURL/$wall"
rm=$(head -1 $HOME/bin/wall.txt)
rm -f $rm
#rm -f wall.txt
gsettings set org.gnome.desktop.background picture-uri "file:///$dir/$wall"
echo $wall > wall.txt
echo "$blue$wall$nc set to wallpaper";echo "$blue$html$nc"

}


                                                                          function defaultNSFW { # IF you use NSFW
while true ; do
cd /tmp/
html=$(curl -s --cookie cookies.txt "$siteURL/search?q=&categories=$categories&purity=$purity&atleast=$atleast&topRange=$topRange&sorting=$sorting&order=desc&page=$random" | grep -o '<a class="preview" href="https://alpha.wallhaven.cc/wallpaper/[0-9]*"' | sed  's .\{24\}  ' | tr -d '"' | awk 'BEGIN { srand() }
{ l[NR]=$0 } END { print l[int(rand() * NR + 1)] }'  )
echo "set $blue$page page to shuffle"
load
done
exit 0
                                                           
}


                                                                           function default { # Default function
while true ; do
html=$(curl -s "$siteURL/search?q=&categories=$categories&purity=$purity&atleast=$atleast&topRange=$topRange&sorting=$sorting&order=desc&page=$random" | grep -o '<a class="preview" href="https://alpha.wallhaven.cc/wallpaper/[0-9]*"' | sed  's .\{24\}  ' | tr -d '"' | awk 'BEGIN { srand() }
{ l[NR]=$0 } END { print l[int(rand() * NR + 1)] }'  )
echo "set $blue$page page to shuffle"
load
done
exit 0                                                        
}

                                                                           function userwall { # IF you pick User
while true ; do
##################################################
cd /tmp/ && echo $userr >> tmpUSER
lastUSER=$(cd /tmp/ && tail -n2  tmpUSER | head -1)
###############################################
userURL=https://alpha.wallhaven.cc/user/$userr/uploads
####################################################
if [ -f /tmp/tmpUSER ] && [ -f /tmp/userPAGE ] && [ "$userr" == "$lastUSER" ]
then
 userPAGE=$(cd /tmp/ && tail -n1 userPAGE)
 randomcountUSER=$(shuf -i 1-$userPAGE -n1)
 randompageUSER=$(shuf -i 1-$page -n1)
else
 pagecountUSER=$(cd /tmp/ && curl -s "$userURL" | grep -Po '<header\s+class="thumb-listing-page-header">\K.*?(?=</header>)' | grep -o '</span> / [0-9]*' | awk -F '[^0-9]+' '{OFS=" "; for(i=1; i<=NF; ++i) if ($i != "") print($i)}' >> userPAGE)
 userPAGE=$(cd /tmp/ && tail -n1 userPAGE)
 randomcountUSER=$(shuf -i 1-$userPAGE -n1)
 randompageUSER=$(shuf -i 1-$page -n1)
fi
if [ "$page" -gt "$userPAGE" ]  ; then
page=$userPAGE
echo "$blue$userr$nc have only $blue$userPAGE$nc page, set $blue$userPAGE/$userPAGE$nc to shuffle."
 else
echo "$blue$userr$nc have $blue$userPAGE$nc page, set $blue$page/$userPAGE$nc to shuffle."
fi
randomcountUSER=$(shuf -i 1-$userPAGE -n1)
randompageUSER=$(shuf -i 1-$page -n1)
html=$(curl -s "$userURL?page=$randompageUSER" | grep -o '<a class="preview" href="https://alpha.wallhaven.cc/wallpaper/[0-9]*"' | sed  's .\{24\}  ' | tr -d '"' | awk 'BEGIN { srand() }
{ l[NR]=$0 } END { print l[int(rand() * NR + 1)] }'  )
 load
done
exit 0 
}

                                                                             function search { # IF You search wallpapers

while true ; do
##################################################################################################################################################
##################################################
cd /tmp/ && echo $search >> tmpSEARCH
lastSEARCH=$(cd /tmp/ && tail -n2  tmpSEARCH | head -1)
###############################################
if [ -f /tmp/tmpSEARCH ] && [ -f /tmp/searchPAGE ] && [ "$search" == "$lastSEARCH" ]
then
  searchPAGE=$(cd /tmp/ && tail -n1 searchPAGE)
  randomcountSEARCH=$(shuf -i 1-$searchPAGE -n1)
  randompageSEARCH=$(shuf -i 1-$page -n1)
else
  countpageSEARCH=$(cd /tmp/ && curl -s "$siteURL/search?q=$search&categories=$categories&purity=$purity&sorting=$sorting&order=desc" | grep -Po '<header\s+class="thumb-listing-page-header">\K.*?(?=</header>)' | grep -o '</span> / [0-9]*' | awk -F '[^0-9]+' '{OFS=" "; for(i=1; i<=NF; ++i) if ($i != "") print($i)}' >> searchPAGE )
  searchPAGE=$(cd /tmp/ && tail -n1 searchPAGE)
  randomcountSEARCH=$(shuf -i 1-$searchPAGE -n1)
  randompageSEARCH=$(shuf -i 1-$page -n1)
fi
if [ "$page" -gt "$searchPAGE" ] ; then
 page=$searchPAGE
 echo "$nc$blue$search$nc wallpapers have $blue$searchPAGE page only, set $blue$searchPAGE/$searchPAGE$nc to shuffle."
else
 echo "found $blue$searchPAGE page $blue$search$nc, set $blue$page/$searchPAGE$nc to shuffle."
fi

 html=$(curl -s "$siteURL/search?q=$search&categories=$categories&purity=$purity&sorting=$sorting&order=desc&page=$randompageSEARCH" | grep -o '<a class="preview" href="https://alpha.wallhaven.cc/wallpaper/[0-9]*"' | sed  's .\{24\}  ' | tr -d '"' | awk 'BEGIN { srand() }
{ l[NR]=$0 } END { print l[int(rand() * NR + 1)] }'  )
  load
done
 exit 0
}
#####
#END#
#####        
                                                                       function searchNSFW { # IF You search NSFW wallpapers

while true ; do
##################################################
cd /tmp/ && echo $search >> tmpSEARCH
lastSEARCH=$(cd /tmp/ && tail -n2  tmpSEARCH | head -1)
###############################################
if [ -f /tmp/tmpSEARCH ] && [ -f /tmp/searchPAGE ] && [ "$search" == "$lastSEARCH" ]
then
  searchPAGE=$(cd /tmp/ && tail -n1 searchPAGE)
  randomcountSEARCH=$(shuf -i 1-$searchPAGE -n1)
  randompageSEARCH=$(shuf -i 1-$page -n1)
else
  countpageSEARCH=$(cd /tmp/ && curl -s --cookie cookies.txt "$siteURL/search?q=$search&categories=$categories&purity=$purity&sorting=$sorting&order=desc" | grep -Po '<header\s+class="thumb-listing-page-header">\K.*?(?=</header>)' | grep -o '</span> / [0-9]*' | awk -F '[^0-9]+' '{OFS=" "; for(i=1; i<=NF; ++i) if ($i != "") print($i)}' >> searchPAGE )
  searchPAGE=$(cd /tmp/ && tail -n1 searchPAGE)
  randomcountSEARCH=$(shuf -i 1-$searchPAGE -n1)
  randompageSEARCH=$(shuf -i 1-$page -n1)
fi
if [ "$page" -gt "$searchPAGE" ] ; then
 page=$searchPAGE
 echo "$nc wallpapers have $blue$searchPAGE page only, set $blue$searchPAGE/$searchPAGE$nc to shuffle."
else
 echo "found $blue$searchPAGE page $blue$search$nc, set $blue$page/$searchPAGE$nc to shuffle."
fi

 html=$(curl -s --cookie cookies.txt "$siteURL/search?q=$search&categories=$categories&purity=$purity&sorting=$sorting&order=desc&page=$randompageSEARCH" | grep -o '<a class="preview" href="https://alpha.wallhaven.cc/wallpaper/[0-9]*"' | sed  's .\{24\}  ' | tr -d '"' | awk 'BEGIN { srand() }
{ l[NR]=$0 } END { print l[int(rand() * NR + 1)] }'  )
  load
done
 exit 0
}
#####
#END#
#####                                                                                                                                                            

####Functions#####

####Flags#########


while getopts ":f:t:s:r:c:p:h:z:u:" o; do 
  case $o in
    t) loop ;; 
    s) sorti ;;
    r) range  ;;
    c) cat ;;
    p) pur ;;
    h) HELP ;;
    z) page ;;
    f) srch ;;
    u) user ;;
    *) HELP ;;       
esac
done


######
while true ; do

if [ -n "${time}" ] ; then 
sleep $time
fi

if [ -n "$userr" ] ; then

userwall

fi

if [ -n "$search" -a "$purity" == "001" ] ; then

searchNSFW

fi

if [ "$purity" == "001" ] ; then

defaultNSFW

fi

default

#######
done  
exit 0
